sequenceDiagram
    %% Diagram 1: Scan Capture & Upload Flow
    participant User as 사용자
    participant ContentView as ContentView
    participant RoomScanner as RoomScannerView
    participant ARContainer as ARViewContainer/Coordinator
    participant ScanInteractor as ScanInteractor
    participant DBRepo as UploadTaskDBRepository/ScanDBRepository
    participant ScanWebRepo as ScanWebRepository (Client)
    participant Backend as 서버 (RunPod Serverless)

    User->>ContentView: + 버튼 탭
    ContentView->>RoomScanner: RoomScannerView 표시
    RoomScanner->>ARContainer: startSession()
    ARContainer->>ARContainer: AR 세션 프레임 수신
    loop 60번 캡처
        ARContainer->>RoomScanner: onCameraUpdate(...)
        alt 캡처 조건 충족
            RoomScanner->>ARContainer: snapshot()
            ARContainer-->>RoomScanner: UIImage
            RoomScanner->>RoomScanner: capturedImages.append(image)
        end
    end
    RoomScanner->>ScanInteractor: storeUploadTask(name, images)
    ScanInteractor->>DBRepo: uploadTask 저장
    ScanInteractor-->>RoomScanner: UploadTask 반환
    RoomScanner->>ScanInteractor: upload(uploadTask)
    ScanInteractor->>ScanWebRepo: uploadScan(name, images)
    ScanWebRepo->>Backend: HTTP POST /uploadScan
    Backend-->>ScanWebRepo: job ID 반환
    ScanWebRepo-->>ScanInteractor: 작업 ID
    ScanInteractor->>DBRepo: 상태 업데이트(.waitingForResult)